version: "3"

services:
  db:
    image: postgres:16-alpine
    restart: on-failure
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    stdin_open: true
    healthcheck:
      test: ["CMD", "-c", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO -P eventlet
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - app
      - db
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - app
      - db
    env_file:
      - .env

volumes:
  pg-data: